uuid: 7aed2d59-22d9-41c8-ba9e-4f178191e380
fileTypes: <cmake CMakeLists.txt>
name: CMake
scopeName: source.cmake

Indent::
    scope: source.cmake
    uuid: cd45e923-9fe3-4d1c-8482-90e651d5bcdb
    decreaseIndentPattern: (?x) ^\s*(?i:
        elseif|else|endif|endforeach|endfunction|endmacro|endwhile|[^(]*\))\s*
        $
    increaseIndentPattern:
        ^\s*(?i:else|elseif|if|function|foreach|while|macro)|.*\([^)]*$

Symbol List - CMake Declarations::
    scope: source.cmake meta.symbol
    uuid: 37f93647-6047-4edf-9995-9571059f5d95
    showInSymbolList: 1
    symbolTransformation:
      s/^\s*//;                   # strip whitespace at beginning
      s/\s+/ /;                   # replace multiple spaces by one
      s/#.*\n//g;                 # strip out comments
      s/\s*#*\s*\z//g;            # strip trailing space and #'s

Comments::
    uuid: c6955f68-6b2c-4a7a-a294-dcdac101ce09
    scope: source.cmake
    TM_COMMENT_DISABLE_INDENT: yes

CMAKE_CONSTANTS_opt_CMAKE_prefix =
    CL_64
    COMPILER_2005
    HOST_APPLE
    HOST_SYSTEM
    HOST_SYSTEM_NAME
    HOST_SYSTEM_PROCESSOR
    HOST_SYSTEM_VERSION
    HOST_UNIX
    HOST_WIN32
    LIBRARY_ARCHITECTURE
    LIBRARY_ARCHITECTURE_REGEX
    OBJECT_PATH_MAX
    SYSTEM
    SYSTEM_NAME
    SYSTEM_PROCESSOR
    SYSTEM_VERSION

CMAKE_CONSTANTS_no_CMAKE_prefix = 
    APPLE
    BORLAND
    CYGWIN
    MSVC
    MSVC80 
    MSVC_IDE
    MSVC_VERSION
    UNIX
    WIN32
    XCODE_VERSION
    MSVC60
    MSVC70
    MSVC90
    MSVC71

_CMAKE_COMPILER_FLAGS = 
    CMAKE_CXX_FLAGS
    CMAKE_CXX_FLAGS_DEBUG
    CMAKE_CXX_FLAGS_MINSIZEREL
    CMAKE_CXX_FLAGS_RELEASE
    CMAKE_CXX_FLAGS_RELWITHDEBINFO
    CMAKE_C_FLAGS
    CMAKE_C_FLAGS_DEBUG
    CMAKE_C_FLAGS_MINSIZEREL
    CMAKE_C_FLAGS_RELEASE
    CMAKE_C_FLAGS_RELWITHDEBINFO

CMAKE_COMPILER_FLAGS = {alternatives: {_CMAKE_COMPILER_FLAGS}}

CMAKE_KEYWORDS =
    ABSOLUTE
    AND
    BOOL
    CACHE
    COMMAND
    DEFINED
    DOC
    EQUAL
    EXISTS
    EXPR
    EXT 
    FALSE
    GREATER
    INTERNAL
    LESS
    MATCHES
    NAME
    NAMES
    NAME_WE
    NOT
    OFF
    ON
    OR
    PATH
    PATHS
    PROGRAM
    STREQUAL
    STRGREATER
    STRING
    STRLESS
    TRUE
    DESTINATION
    LIMIT_COUNT
    LIMIT_INPUT
    LIMIT_OUTPUT
    LENGTH_MINIMUM
    LENGTH_MAXIMUM
    NEWLINE_CONSUME
    REGEX
    NO_HEX_CONVERSION
    RELATIVE
    FOLLOW_SYMLINKS
    LIMIT
    OFFSET
    HEX
    INACTIVITY_TIMEOUT
    TIMEOUT
    STATUS
    LOG
    SHOW_PROGRESS 
    EXPECTED_HASH 
    EXPECTED_MD5
    TLS_VERIFY
    TLSCAINFO file
    UTC
    CONTENT
    CONDITION
    FILES_MATCHING
    PATTERN
    EXCLUDE


CMAKE_FUNCTIONS_CONTROL =
    if
    elseif
    else
    endif
    foreach
    endforeach
    while
    endwhile
    endfunction
    endmacro

CMAKE_FUNCTIONS_DEFINE =
    function
    macro
    add_custom_command
    add_custom_target
    add_executable
    add_library

CMAKE_FUNCTIONS =
    add_definitions
    add_dependencies
    add_subdirectory
    add_test
    aux_source_directory
    break
    build_command
    cmake_minimum_required
    cmake_policy
    configure_file
    create_test_sourcelist
    define_property
    execute_process
    export
    enable_language
    enable_testing
    file
    find_file
    find_library
    find_package
    find_path
    find_program
    fltk_wrap_ui
    get_cmake_property
    get_directory_property
    get_filename_component
    get_property
    get_source_file_property
    get_target_property
    get_test_property
    include
    include_directories
    include_external_msproject
    include_regular_expression
    install
    link_directories
    list
    load_cache
    load_command
    mark_as_advanced
    math
    message
    option
    project
    qt_wrap_cpp
    qt_wrap_ui
    remove_definitions
    return
    separate_arguments
    set
    set_directory_properties
    set_property
    set_source_files_properties
    set_target_properties
    set_tests_properties
    site_name
    source_group
    string
    target_compile_definitions
    target_include_directories
    target_link_libraries
    try_compile
    try_run
    unset
    variable_watch


CMAKE_VARIABLES_no_prefix =
    BUILD_SHARED_LIBS

CMAKE_VARIABLES_opt_CMAKE_prefix = 
    ABSOLUTE_DESTINATION_FILES
    AUTOMOC_RELAXED_MODE
    BACKWARDS_COMPATIBILITY
    BUILD_TYPE
    COLOR_MAKEFILE
    CONFIGURATION_TYPES
    DEBUG_TARGET_PROPERTIES
    DISABLE_FIND_PACKAGE_\w+
    FIND_LIBRARY_PREFIXES
    FIND_LIBRARY_SUFFIXES
    IGNORE_PATH
    INCLUDE_PATH
    INSTALL_DEFAULT_COMPONENT_NAME
    INSTALL_PREFIX
    LIBRARY_PATH
    MFC_FLAG
    MODULE_PATH
    NOT_USING_CONFIG_FLAGS
    POLICY_DEFAULT_CMP\w+
    PREFIX_PATH
    PROGRAM_PATH
    SKIP_INSTALL_ALL_DEPENDENCY
    SYSTEM_IGNORE_PATH
    SYSTEM_INCLUDE_PATH
    SYSTEM_LIBRARY_PATH
    SYSTEM_PREFIX_PATH
    SYSTEM_PROGRAM_PATH
    USER_MAKE_RULES_OVERRIDE
    WARN_ON_ABSOLUTE_INSTALL_DESTINATION

CMAKE_SIG_file =
    WRITE
    APPEND
    READ
    MD5 SHA1 SHA224 SHA256 SHA384 SHA512
    STRINGS
    GLOB
    GLOB_RECURSE
    RENAME
    REMOVE
    REMOVE_RECURSE
    MAKE_DIRECTORY
    RELATIVE_PATH
    TO_CMAKE_PATH
    TO_NATIVE_PATH
    DOWNLOAD
    UPLOAD
    TIMESTAMP
    GENERATE{space}OUTPUT
    COPY
    INSTALL


CMAKE_CONDITIONALS =
    STREQUAL
    MATCHES
    NOT
    OR
    AND
    STRGREATER
    STRLESS
    GREATER
    LESS
    EXISTS
    COMMAND
    DEFINED
    EQUAL


kwstart = \b(?<=^|[\s\(])
kwend   = \b(?=[\s\)])

strstart = (?<=^|[\s\(])
strend   = (?=[\s\)])

MAIN
    comment.line.number-sign.cmake
        (?x) \# .* $

    meta.documentation.restructuredtext
        (?x)  ^ \s* (set\s*\(\s*RST_COMMENT\s*")
        1: comment.block.documentation.restructuredtext

        ^\s*("\s*\))\s*$
        1: comment.block.documentation.restructuredtext

        #text.restructuredtext

    comment.block.documentation.restructuredtext
        (?x)  ^ \s* (set\s*\(\s*RST_COMMENT\s*)
        1: comment.block.documentation.restructuredtext

        ^\s*\s*(\))\s*$
        1: comment.block.documentation.restructuredtext

        #text.restructuredtext

    #cmake-functions

cmake-constants
    constant.source.cmake
        (?x) {kwstart}(?i:
            {alternatives: {CMAKE_CONSTANTS_no_CMAKE_prefix}}
            (CMAKE_)?({alternatives: {CMAKE_CONSTANTS_opt_CMAKE_prefix}})
            ){kwend}

cmake-keywords
    keyword.cmake
        (?x) {kwstart}(?i:{alternatives: {CMAKE_KEYWORDS}}){kwend}

# paranthesis-expression
#     meta.expression.cmake
        # \(

        # #$self
        # #cmake-constants
        # #cmake-keywords
        # #cmake-variables
        # #cmake-strings

        # \)

cmake-conditionals
    keyword.cmake
        {kwstart}(?i:{alternatives: {CMAKE_CONDITIONALS}}){kwend}

cmake-comment
    comment.line.number-sign.cmake
        (?x) \# .* $

cmake-functions
    meta.symbol.function.cmake
        (?i)^\s*(macro|function)\s*\(\s*(\w+)\s
        1: keyword.cmake
        2: entity.name.function.cmake

        \)

        variable.parameter.function.cmake
            \w+

    meta.symbol.target.cmake
        (?i)^\s*(add_custom_target|add_library|add_executable|project)\s*\(
        1: keyword.cmake
        2: entity.name.target.cmake

        #cmake-comment
        #cmake-constants
        #cmake-keywords
        #cmake-strings
        #cmake-variables

        \)


    meta.function-call.cmake
        (?i)^\s*(if|elseif)\s*\(
        1: support.function.builtin.cmake

        #cmake-conditionals
        #cmake-strings
        #cmake-variables

        \)

    meta.function-call.cmake
        (?ix) ^\s*(file)\s*\(\s*(
            {alternatives: {CMAKE_SIG_file}}
            )\b
        1: support.function.builtin.cmake

        #cmake-comment
        #cmake-constants
        #cmake-keywords
        #cmake-strings
        #cmake-variables

        \)

    meta.function-call.cmake
        (?x) ^\s*((?i:
              {alternatives: {CMAKE_FUNCTIONS}}
            | {alternatives: {CMAKE_FUNCTIONS_CONTROL}}
            ))\s*\(
        1: support.function.builtin.cmake

        #cmake-comment
        #cmake-constants
        #cmake-keywords
        #cmake-strings
        #cmake-variables

        (?x) \)

    meta.function-call.cmake
        (?x) ^\s*\w+\s*\(

        #cmake-comment
        #cmake-constants
        #cmake-keywords
        #cmake-strings
        #cmake-variables

        \)

    meta.declaration.cmake
        (?x) ^\s*(?i: ({alternatives: {CMAKE_FUNCTIONS_DEFINE}}) )\s*\(\s*(\w+)

        1: support.function.builtin.cmake
        2: storage.type.function.cmake

        variable.parameter
            \w+

        (?x) \)

cmake-variables
    variable.source.cmake
        (?x) \b(?i: 
              {alternatives: {CMAKE_VARIABLES_no_prefix}}
            | (CMAKE_)?( {alternatives: {CMAKE_VARIABLES_opt_CMAKE_prefix}} )
            )\b

    #cmake_variable
    #cmake_variable_names

    variable.source.cmake
        (?x) \b(?i:(CMAKE_)?(
                \w+_POSTFIX
                | ARCHIVE_OUTPUT_DIRECTORY
                | AUTOMOC
                | AUTOMOC_MOC_OPTIONS
                | BUILD_WITH_INSTALL_RPATH
                | DEBUG_POSTFIX
                | EXE_LINKER_FLAGS
                | EXE_LINKER_FLAGS_\w+
                | Fortran_FORMAT
                | Fortran_MODULE_DIRECTORY
                | GNUtoMS
                | INCLUDE_CURRENT_DIR
                | INCLUDE_CURRENT_DIR_IN_INTERFACE
                | INSTALL_NAME_DIR
                | INSTALL_RPATH
                | INSTALL_RPATH_USE_LINK_PATH
                | LIBRARY_OUTPUT_DIRECTORY
                | LIBRARY_PATH_FLAG
                | LINK_DEF_FILE_FLAG
                | LINK_DEPENDS_NO_SHARED
                | LINK_INTERFACE_LIBRARIES
                | LINK_LIBRARY_FILE_FLAG
                | LINK_LIBRARY_FLAG
                | MACOSX_BUNDLE
                | NO_BUILTIN_CHRPATH
                | PDB_OUTPUT_DIRECTORY
                | POSITION_INDEPENDENT_CODE
                | RUNTIME_OUTPUT_DIRECTORY
                | SKIP_BUILD_RPATH
                | SKIP_INSTALL_RPATH
                | TRY_COMPILE_CONFIGURATION
                | USE_RELATIVE_PATHS
                | WIN32_EXECUTABLE
                )
            | EXECUTABLE_OUTPUT_PATH
            | LIBRARY_OUTPUT_PATH
            )\b

    variable.source.cmake
        (?x) \b(?i:CMAKE_(
                  AR
                | ARGC
                | ARGV0
                | BINARY_DIR
                | BUILD_TOOL
                | CACHEFILE_DIR
                | CACHE_MAJOR_VERSION
                | CACHE_MINOR_VERSION
                | CACHE_PATCH_VERSION
                | CFG_INTDIR
                | COMMAND
                | CROSSCOMPILING
                | CTEST_COMMAND
                | CURRENT_BINARY_DIR
                | CURRENT_LIST_DIR
                | CURRENT_LIST_FILE
                | CURRENT_LIST_LINE
                | CURRENT_SOURCE_DIR
                | DL_LIBS
                | EDIT_COMMAND
                | EXECUTABLE_SUFFIX
                | EXTRA_GENERATOR
                | EXTRA_SHARED_LIBRARY_SUFFIXES
                | GENERATOR
                | HOME_DIRECTORY
                | IMPORT_LIBRARY_PREFIX
                | IMPORT_LIBRARY_SUFFIX
                | LINK_LIBRARY_SUFFIX
                | MAJOR_VERSION
                | MAKE_PROGRAM
                | MINOR_VERSION
                | PARENT_LIST_FILE
                | PATCH_VERSION
                | PROJECT_NAME
                | RANLIB
                | ROOT
                | SCRIPT_MODE_FILE
                | SHARED_LIBRARY_PREFIX
                | SHARED_LIBRARY_SUFFIX
                | SHARED_MODULE_PREFIX
                | SHARED_MODULE_SUFFIX
                | SIZEOF_VOID_P
                | SKIP_RPATH
                | SOURCE_DIR
                | STANDARD_LIBRARIES
                | STATIC_LIBRARY_PREFIX
                | STATIC_LIBRARY_SUFFIX
                | TWEAK_VERSION
                | USING_VC_FREE_TOOLS
                | VERBOSE_MAKEFILE
                | VERSION)
            | PROJECT_BINARY_DIR
            | PROJECT_NAME
            | PROJECT_SOURCE_DIR
            | \w+_BINARY_DIR
            | \w+_SOURCE_DIR
            )\b

    comment.source.cmake
        #+.*$
    entity.source.cmake
        (?x) {kwstart}(?i:ADVANCED|HELPSTRING|MODIFIED|STRINGS|TYPE|VALUE
            |FORCE){kwend}
    entity.source.cmake
        (?x) {kwstart}(?i:ABSTRACT|COMPILE_DEFINITIONS
            |COMPILE_DEFINITIONS_<CONFIG>|COMPILE_FLAGS|EXTERNAL_OBJECT
            |Fortran_FORMAT|GENERATED
            |HEADER_FILE_ONLY|KEEP_EXTENSION
            |LABELS|LANGUAGE
            |LOCATION|MACOSX_PACKAGE_LOCATION
            |OBJECT_DEPENDS|OBJECT_OUTPUTS|SYMBOLIC|WRAP_EXCLUDE)\b
    entity.source.cmake
        (?x) {kwstart}(?i:ATTACHED_FILES|ATTACHED_FILES_ON_FAIL
            |COST|DEPENDS|ENVIRONMENT
            |FAIL_REGULAR_EXPRESSION|LABELS
            |MEASUREMENT|PASS_REGULAR_EXPRESSION
            |PROCESSORS|REQUIRED_FILES
            |RESOURCE_LOCK|RUN_SERIAL
            |TIMEOUT|WILL_FAIL|WORKING_DIRECTORY){kwend}
    entity.source.cmake
        (?x) {kwstart}(?i:ADDITIONAL_MAKE_CLEAN_FILES|CACHE_VARIABLES
            |CLEAN_NO_CUSTOM|COMPILE_DEFINITIONS|COMPILE_DEFINITIONS_\w+
            |DEFINITIONS|EXCLUDE_FROM_ALL
            |IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|INCLUDE_DIRECTORIES
            |INCLUDE_REGULAR_EXPRESSION|INTERPROCEDURAL_OPTIMIZATION
            |INTERPROCEDURAL_OPTIMIZATION_\w+|LINK_DIRECTORIES
            |LISTFILE_STACK|MACROS
            |PARENT_DIRECTORY|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM
            |RULE_LAUNCH_LINK|TEST_INCLUDE_FILE
            |VARIABLES
            |VS_GLOBAL_SECTION_POST_\w+|VS_GLOBAL_SECTION_PRE_\w+){kwend}
    entity.source.cmake
        (?x) {kwstart}(?i:ALLOW_DUPLICATE_CUSTOM_TARGETS|DEBUG_CONFIGURATIONS
            |DISABLED_FEATURES|ENABLED_FEATURES|ENABLED_LANGUAGES
            |FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING
            |GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES
            |IN_TRY_COMPILE|PACKAGES_FOUND
            |PACKAGES_NOT_FOUND|PREDEFINED_TARGETS_FOLDER
            |REPORT_UNDEFINED_PROPERTIES|RULE_LAUNCH_COMPILE
            |RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES
            |TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_SUPPORTS_SHARED_LIBS
            |USE_FOLDERS
            |__CMAKE_DELETE_CACHE_CHANGE_VARS_){kwend}

    entity.source.cmake
        (?x) {kwstart}(?i:
            \w+_(OUTPUT_NAME|POSTFIX)
            |ARCHIVE_OUTPUT_(DIRECTORY(_\w+)?|NAME(_\w+)?)
            |AUTOMOC(_MOC_OPTIONS)?
            |BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE(_EXTENSION)?
            |COMPATIBLE_INTERFACE_BOOL|COMPATIBLE_INTERFACE_STRING
            |COMPILE_(DEFINITIONS(_\w+)?|FLAGS)|DEBUG_POSTFIX|DEFINE_SYMBOL
            |ENABLE_EXPORTS|EXCLUDE_FROM_ALL|EchoString|FOLDER|FRAMEWORK
            |Fortran_(FORMAT|MODULE_DIRECTORY)|GENERATOR_FILE_NAME|GNUtoMS
            |HAS_CXX|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED
            |IMPORTED_(CONFIGURATIONS|IMPLIB(_\w+)?
                |LINK_DEPENDENT_LIBRARIES(_\w+)?|LINK_INTERFACE_LANGUAGES(_\w+)?
                |LINK_INTERFACE_LIBRARIES(_\w+)?
                |LINK_INTERFACE_MULTIPLICITY(_\w+)?|LOCATION(_\w+)?
                |NO_SONAME(_\w+)?|SONAME(_\w+)?
                )
            |IMPORT_PREFIX|IMPORT_SUFFIX|INSTALL_NAME_DIR|INSTALL_RPATH
            |INSTALL_RPATH_USE_LINK_PATH|INTERFACE_COMPILE_DEFINITIONS
            |INTERFACE_INCLUDE_DIRECTORIES|INTERPROCEDURAL_OPTIMIZATION
            |INTERPROCEDURAL_OPTIMIZATION_\w+|LABELS
            |LIBRARY_OUTPUT_DIRECTORY(_\w+)?|LIBRARY_OUTPUT_NAME(_\w+)?
            |LINKER_LANGUAGE|LINK_DEPENDS|LINK_FLAGS(_\w+)?
            |LINK_INTERFACE_LIBRARIES(_\w+)?
            |LINK_INTERFACE_MULTIPLICITY(_\w+)?|LINK_LIBRARIES
            |LINK_SEARCH_END_STATIC|LINK_SEARCH_START_STATIC
            |LOCATION(_\w+)?|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST
            |MACOSX_FRAMEWORK_INFO_PLIST|MAP_IMPORTED_CONFIG_\w+|NO_SONAME
            |OSX_ARCHITECTURES(_\w+)?|OUTPUT_NAME(_\w+)?|PDB_NAME(_\w+)?
            |POST_INSTALL_SCRIPT|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER
            |PROJECT_LABEL|PUBLIC_HEADER|RESOURCE
            |RULE_LAUNCH_(COMPILE|CUSTOM|LINK)
            |RUNTIME_OUTPUT_(DIRECTORY(_\w+)?|NAME(_\w+)?)|SKIP_BUILD_RPATH
            |SOURCES|SOVERSION|STATIC_LIBRARY_FLAGS(_\w+)?|SUFFIX|TYPE
            |VERSION|VS_DOTNET_REFERENCES|VS_GLOBAL_(\w+|KEYWORD|PROJECT_TYPES)
            |VS_KEYWORD|VS_SCC_(AUXPATH|LOCALPATH|PROJECTNAME|PROVIDER)
            |VS_WINRT_EXTENSIONS|VS_WINRT_REFERENCES|WIN32_EXECUTABLE
            |XCODE_ATTRIBUTE_\w+){kwend}

    #cmake-strings

    invalid.deprecated.source.cmake
        {kwstart}(?i:ABSTRACT_FILES|BUILD_NAME|SOURCE_FILES|SOURCE_FILES_REMOVE|VTK_MAKE_INSTANTIATOR|VTK_WRAP_JAVA|VTK_WRAP_PYTHON|VTK_WRAP_TCL|WRAP_EXCLUDE_FILES){kwend}

cmake-strings
    string.source.cmake
        (?<!\\)(["'])
        (?<!\\)\1

        #string_escapes
        #cmake_variable

    constant.numeric.cmake
        {strstart}\d+(?:\.\d+)?{strend}

    <string.unquoted.option.cmake>
        {strstart}([\-/]D)([^=]+)(=)
        1: keyword.operator.definition.cmake
        2: storage.type.definition.cmake
        3: keyword.operator.definition.cmake

        #cmake_variable

        {strend}

    <string.unquoted.option.cmake>
        {strstart}(-)(\w)(?=[^\s\)]*{strend})
        1: keyword.operator.definition.cmake
        2: storage.type.definition.cmake

        #cmake_variable

        {strend}

    storage.type.definition.cmake
        {strstart}([\-/])\w{strend}
        1: keyword.operator.definition.cmake

    storage.type.definition.cmake
        {strstart}(--|/)[\w\-]+{strend}
        1: keyword.operator.definition.cmake

    <string.unquoted.option.cmake>
        {strstart}((--|/)[\w\-]+)(=)
        1: storage.type.definition.cmake
        2: keyword.operator.definition.cmake
        3: keyword.operator.definition.cmake
        
        #cmake_variable

        {strend}

    keyword.operator.definition.cmake
        {strstart}--{strend}

    string.unquoted.path.cmake
        {strstart}(?=\S[^\s/]+/)

        #cmake_variable

        {strend}

    # string.unquoted.cmake
    #     (?=\S)(?!["\)\()])
    #     (?=\s|\)\s)
    #     #string_escapes
    #     #cmake_variable

string_escapes
    constant.character.escape.restructuredtext
        \\.

cmake_variable
    variable.source.cmake
        (\$\{)
        1: punctuation.definition.variable.begin.cmake

        (\})
        1: punctuation.definition.variable.end.cmake

        #cmake_variable_names
        #cmake_variable

cmake_variable_names
    support.variable.cmake
        (?x) \b(?i:(CMAKE_)?(\w+_POSTFIX|ARCHIVE_OUTPUT_DIRECTORY|AUTOMOC
                |AUTOMOC_MOC_OPTIONS|BUILD_WITH_INSTALL_RPATH|DEBUG_POSTFIX
                |EXE_LINKER_FLAGS|EXE_LINKER_FLAGS_\w+|Fortran_FORMAT
                |Fortran_MODULE_DIRECTORY|GNUtoMS|INCLUDE_CURRENT_DIR
                |INCLUDE_CURRENT_DIR_IN_INTERFACE|INSTALL_NAME_DIR
                |INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH
                |LIBRARY_OUTPUT_DIRECTORY|LIBRARY_PATH_FLAG|LINK_DEF_FILE_FLAG
                |LINK_DEPENDS_NO_SHARED|LINK_INTERFACE_LIBRARIES
                |LINK_LIBRARY_FILE_FLAG|LINK_LIBRARY_FLAG|MACOSX_BUNDLE
                |NO_BUILTIN_CHRPATH|PDB_OUTPUT_DIRECTORY
                |POSITION_INDEPENDENT_CODE|RUNTIME_OUTPUT_DIRECTORY
                |SKIP_BUILD_RPATH|SKIP_INSTALL_RPATH|TRY_COMPILE_CONFIGURATION
                |USE_RELATIVE_PATHS|WIN32_EXECUTABLE)
            |EXECUTABLE_OUTPUT_PATH
            |LIBRARY_OUTPUT_PATH)\b

    support.variable.cmake
        (?x) \b(?i:CMAKE_(AR|ARGC|ARGV0|BINARY_DIR|BUILD_TOOL|CACHEFILE_DIR
             |CACHE_MAJOR_VERSION|CACHE_MINOR_VERSION|CACHE_PATCH_VERSION
             |CFG_INTDIR|COMMAND|CROSSCOMPILING|CTEST_COMMAND
             |CURRENT_BINARY_DIR|CURRENT_LIST_DIR|CURRENT_LIST_FILE
             |CURRENT_LIST_LINE|CURRENT_SOURCE_DIR|DL_LIBS|EDIT_COMMAND
             |EXECUTABLE_SUFFIX|EXTRA_GENERATOR|EXTRA_SHARED_LIBRARY_SUFFIXES
             |GENERATOR|HOME_DIRECTORY|IMPORT_LIBRARY_PREFIX
             |IMPORT_LIBRARY_SUFFIX|LINK_LIBRARY_SUFFIX|MAJOR_VERSION
             |MAKE_PROGRAM|MINOR_VERSION|PARENT_LIST_FILE|PATCH_VERSION
             |PROJECT_NAME|RANLIB|ROOT|SCRIPT_MODE_FILE|SHARED_LIBRARY_PREFIX
             |SHARED_LIBRARY_SUFFIX|SHARED_MODULE_PREFIX|SHARED_MODULE_SUFFIX
             |SIZEOF_VOID_P|SKIP_RPATH|SOURCE_DIR|STANDARD_LIBRARIES
             |STATIC_LIBRARY_PREFIX|STATIC_LIBRARY_SUFFIX|TWEAK_VERSION
             |USING_VC_FREE_TOOLS|VERBOSE_MAKEFILE|VERSION)|PROJECT_BINARY_DIR
             |PROJECT_NAME|PROJECT_SOURCE_DIR|\w+_BINARY_DIR|\w+_SOURCE_DIR
             )\b

    support.variable.cmake
        {kwstart}{alternatives: {CMAKE_COMPILER_FLAGS}}{kwend}



